/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package distance;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class map extends javax.swing.JFrame {
     private Scanner x;
     public static int R [][],R2[][];
     public static double D[][],M[][];
     public static int fp[],fp2[],rt[][],a,v;
     public static double b,m,n;
     int c;
    public static float A[][],alpha,beta;
     Object [][] data = null;
String[] columnNames = new String[a];
    private int dc;
    private float cx;
    private float cy;
    private double zx;
    private double zy;

    /**
     * Creates new form map
     */
    public map() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        explorer = new javax.swing.JButton();
        bench = new javax.swing.JButton();
        firstproblem = new javax.swing.JButton();
        secondproblem = new javax.swing.JButton();
        b1 = new javax.swing.JRadioButton();
        b2 = new javax.swing.JRadioButton();
        b3 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dam = new javax.swing.JButton();
        dam1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        vindex = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        vindex1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        explorer.setText("Select Parking Data");
        explorer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                explorerActionPerformed(evt);
            }
        });

        bench.setText("Generate Benchmark");
        bench.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                benchActionPerformed(evt);
            }
        });

        firstproblem.setText("Minimize Distance");
        firstproblem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstproblemActionPerformed(evt);
            }
        });

        secondproblem.setText("Minimize Distance and Rate");
        secondproblem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondproblemActionPerformed(evt);
            }
        });

        buttonGroup1.add(b1);
        b1.setText("50 Cars");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(b2);
        b2.setText("100 Cars");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(b3);
        b3.setText("200 Cars");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Car", "Zone"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        dam.setText("Display the Asignement Matrix1");
        dam.setEnabled(false);
        dam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                damActionPerformed(evt);
            }
        });

        dam1.setText("Display the Asignement Matrix2");
        dam1.setEnabled(false);
        dam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dam1ActionPerformed(evt);
            }
        });

        jButton1.setText("Display The Road");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Enter Car Index");

        jButton2.setText("Display The Road");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Enter Car Index");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(explorer, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(b3)
                    .addComponent(secondproblem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(firstproblem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b1)
                    .addComponent(bench, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(vindex, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(vindex1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dam1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(explorer)
                        .addGap(18, 18, 18)
                        .addComponent(b1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b3)
                        .addGap(18, 18, 18)
                        .addComponent(bench)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstproblem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(vindex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(dam)
                        .addGap(18, 18, 18)
                        .addComponent(dam1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(secondproblem)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(vindex1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void explorerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_explorerActionPerformed
      JFileChooser choose = new  JFileChooser("C:\\Users\\Desktop\\Nouveau");
choose.showOpenDialog(null);
File f = choose.getSelectedFile();
      
        try {
            x= new Scanner(f);
            a = x.nextInt();
           
            M = new double [a][4];
            for(int i = 0;i <a;i++){
            for(int j = 0;j <4;j++){
                M[i][j] = x.nextDouble();
           
        }
        } 
            
            for(int i = 0;i<a;i++){
            for(int j = 0;j<4;j++){
            
            // System.out.print(M[i][j]+"\t");
             
            }
               //  System.out.println("  ");
                 
             }
            } catch (FileNotFoundException ex) {
            Logger.getLogger(map.class.getName()).log(Level.SEVERE, null, ex);
            }
        x.close();
        System.out.println("**************************************\n");
    }//GEN-LAST:event_explorerActionPerformed

    private void benchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_benchActionPerformed
         try {
             
             Random random;
             rt = new int [a][1200];
             A = new float [v][5];
             D = new double [v][a];
             fp = new int[a];
             fp2 = new int[a];
             random = new Random();
               int perm=0;   
                 for(int j = 0;j<a;j++){
                     fp[j]=0;
                     fp2[j]=0;
                 }
                  
             for(int i = 0;i<a;i++){
                 c = (int) M[i][2];
                 for(int j = 0;j<c;j++){
                     rt[i][j] = random.nextInt(200);
                     if(rt[i][j]==0){
                        perm=perm+1 ;
                     }
                 }
                 fp[i]=perm;
                 fp2[i]=perm;
             }
              for (int j = 0; j < a; j++) {
            System.out.print(fp[j] + "\t");
         
        }
              System.out.println("++++");
              for (int j = 0; j < a; j++) {
            System.out.print(fp2[j] + "\t");
         
        }
             for(int i = 0;i<a;i++){
                 c = (int) M[i][2];
                 for(int j = 0;j<c;j++){
                    // System.out.print(rt[i][j]+"\t");
                 }
                 //System.out.println();
             }
             BufferedWriter bf = null;
             bf = new BufferedWriter(new FileWriter("vpd.txt"));
             bf.write(""+a);
             bf.newLine();
            for(int i = 0;i<a;i++){
              c = (int) M[i][2];
            for(int j = 0;j<c;j++){
             bf.write(rt[i][j]+"\t");
            }
            bf.newLine();
        }
        
            bf.close();
          
             for (int i = 0; i < v; i++) {
             m = (0.74 + (Math.random() * 0.10)) + 36;
             n = (0.12 + (Math.random() * 0.08)) + 10;
             alpha= random.nextFloat();
             alpha=  (float)((int)(alpha*100))/100;
             beta= 1-alpha;
             beta=  (float)((int)(beta*100))/100;
                 A[i][0]=(float) m;
                 A[i][1]=(float) n;
                 A[i][2]= random.nextInt(120)+1;
                 A[i][3]=alpha;
                 A[i][4]=beta;
              }
            for (int i = 0; i < v; i++) {
                for (int j = 0; j < 5; j++) {
                    
                   // System.out.print(A[i][j]+"\t");
                    
                }
                //System.out.println();
            }
             System.out.println("**************************");
            BufferedWriter bf1 = null;
            bf1 = new BufferedWriter(new FileWriter("vcd.txt"));
            bf1.write(""+v);
            bf1.newLine();
            
            for(int i = 0;i<v;i++){
            for(int j = 0;j<5;j++){
             bf1.write(A[i][j]+"\t");
            }
            bf1.newLine();
        }
              bf1.close();
          double distance, x1,y1,x2,y2;
                 for (int i = 0; i < v; i++) {   
                      x1 = A[i][0];
                      y1 = A[i][1];
                 for (int j = 0; j < a; j++) { 
                     x2 = M[j][0];
                     y2 = M[j][1];
                     D[i][j] = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
                 }
             }
                 for (int i = 0; i < v; i++) {
                for (int j = 0; j < a; j++) {
                    
                   // System.out.print(D[i][j]+"\t");
                    
                }
                //System.out.println();
            }

           
         } catch (IOException ex) {
             Logger.getLogger(map.class.getName()).log(Level.SEVERE, null, ex);
         }
            
           
            
    }//GEN-LAST:event_benchActionPerformed

    private void firstproblemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstproblemActionPerformed
      int  k ;
       double min ;
         R =  new int [v][a];
         for(int i = 0;i<v;i++){
             for(int j = 0;j<a;j++){
             R[i][j]=0;
                     }
         }
       
        for(int i = 0;i<v;i++){
            min=1;
            k=0;
            for(int j = 0;j<a;j++){
                
             if((D[i][j]< min) && (fp[j]>0)){
                 min= D[i][j];
                 k=j;
             }
            }
                if (fp[k]>0){
                R[i][k]=1;
                 fp[k]=fp[k]-1;
                }
             }
       
           System.out.println("----------");
         for(int i = 0;i<v;i++){
            for(int j = 0;j<a;j++){
      
                System.out.print(R[i][j]+"\t");
            }
            System.out.println("");
            
        }
         System.out.println("************************\n");
         
   // table result = new table();
    //result.setVisible(true);
    //result.setLocationRelativeTo(null);
         columnNames= new String[]{"Car","Zone"};

        data= new Object[v][a];
        Object[][] temp= new Object[data.length+1][a];
        
        for(int i = 0;i<v;i++){
            for(int j = 0;j<a;j++){

                if(R[i][j]==1){
                    data[i][0]=i+1;
                    data[i][1]=j+1;
                }
                for(int c = 0;c<data.length;c++){
                    for(int p = 0;p<a;p++){
                        temp[c][p]=data[c][p];
                    }
                }
            }
        }
        data=temp;

     jTable1.setModel(new DefaultTableModel(data,columnNames));
     dam.setEnabled(true);
    }//GEN-LAST:event_firstproblemActionPerformed

    private void secondproblemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondproblemActionPerformed
       int  k = 0;
        Object [][] data = null;
        double mind = 2;
        double minr = 2;
         R2 =  new int [v][a];
         for(int i = 0;i<v;i++){
             for(int j = 0;j<a;j++){
             R2[i][j]=0;
                     }
         }
         
        for(int i = 0;i<v;i++){
            if(A[i][3]>A[i][4]){
            mind=2;
            k=0;
            for(int j = 0;j<a;j++){
               
             if((D[i][j]< mind) && (fp2[j]>0)){
                 mind= D[i][j];
                 k=j;
             }
            }
            for(int j = 0;j<a;j++){
             if((M[j][3]< minr) && (fp2[j]>0)&&(D[i][j]==mind)){
                 minr= M[j][3];
                 k=j;
             }
            }
                if (fp2[k]>0){
                R2[i][k]=1;
                 fp2[k]=fp2[k]-1;
                }
             }
            else{
                for(int j = 0;j<a;j++){
             if((M[j][3]< minr) && (fp2[j]>0)){
                 minr= M[j][3];
                 k=j;
             }
            }
            for(int j = 0;j<a;j++){
             if((D[i][j]< mind) && (fp2[j]>0) && (M[j][3]==minr)){
                 mind= D[i][j];
                 k=j;
             }
            }
           if (fp2[k]>0){
                R2[i][k]=1;
                 fp2[k]=fp2[k]-1;
           }
            }
        }
    
        System.out.println("----------");
        //for(int i = 1;i<=10;i++){
             //rzonec2.append("c"+i+"\n");}
         for(int i = 0;i<v;i++){
            for(int j = 0;j<a;j++){
        //rzone2.append(""+A2[i][j]+"\t");
                System.out.print(R2[i][j]+"\t");
            }
            System.out.println("");
            //rzone2.append("\n");
        }
        System.out.println("********\n");
         for(int j = 0;j<a;j++){
                
            
                 System.out.print(fp[j]+"\t");
            }
         System.out.println("****");
          for(int j = 0;j<a;j++){
                 System.out.print(fp2[j]+"\t");
            
          
            }
          
          
          columnNames= new String[]{"Car","Zone"};

        data= new Object[v][a];
        Object[][] temp= new Object[data.length+1][a];
        
        for(int i = 0;i<v;i++){
            for(int j = 0;j<a;j++){

                if(R2[i][j]==1){
                    data[i][0]=i+1;
                    data[i][1]=j+1;
                }
                for(int c = 0;c<data.length;c++){
                    for(int p = 0;p<a;p++){
                        temp[c][p]=data[c][p];
                    }
                }
            }
        }
        data=temp;

     jTable1.setModel(new DefaultTableModel(data,columnNames));
     dam1.setEnabled(true);
    }//GEN-LAST:event_secondproblemActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        v=50;
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
       v=100;
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        v=200;
    }//GEN-LAST:event_b3ActionPerformed

    private void damActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_damActionPerformed
    table result = new table();
    result.setVisible(true);
    result.setLocationRelativeTo(null);
    dam.setEnabled(false);
    }//GEN-LAST:event_damActionPerformed

    private void dam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dam1ActionPerformed
        
    table2 result2 = new table2();
    result2.setVisible(true);
    result2.setLocationRelativeTo(null);
        
        dam1.setEnabled(false);
    }//GEN-LAST:event_dam1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
     dc = Integer.parseInt(this.vindex.getText());
}catch (Exception e){
    JOptionPane.showMessageDialog(this,"Put a valid number","Error",JOptionPane.ERROR_MESSAGE);
} 
    try{                                           
        // TODO add your handling code here:
        dc=dc-1;
        for (int i = 0; i < v; i++) {
          for(int j = 0;j<a;j++){
            if((i==dc)&&(R[i][j]==1)){
               cx = A[i][0];
               cy = A[i][1];
               zx = M[j][0];
               zy = M[j][1];
            }
             }
        }
        BufferedWriter mf = null;
        mf = new BufferedWriter(new FileWriter("index.html"));
        mf.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">");
        mf.newLine();
        mf.write("<html>");
        mf.newLine();
        mf.write("<head>");
        mf.newLine();
        mf.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">");
        mf.newLine();
        mf.write("<title>Iterinaire</title>");
         mf.newLine();
        mf.write("</head>");
         mf.newLine();
         mf.write("<script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"></script>");
         mf.newLine();
         mf.write("<script type=\"text/javascript\" src=\"jquery.min.js\"></script>");
         mf.newLine();
         mf.write("<script type=\"text/javascript\" src= \"jj.js\"></script>");
         mf.newLine();
         mf.write("<style type=\"text/css\">");
         mf.newLine();
         mf.write("#map_content {");
         mf.newLine();
         mf.write("height: 400px;");
         mf.newLine();
         mf.write("margin: 10px 0;");
         mf.newLine();
         mf.write("}");
         mf.newLine();
         mf.write("</style>");
         mf.newLine();
         mf.write("<body onload= \"calcRoute()\">");
         mf.newLine();
         mf.write("<xml id=\"myBiz\" style=\"display: none;\">");
         mf.newLine();
         mf.write("<Coordinate>");
         mf.newLine();
         mf.write(" <x>"+cx+"</x>");
         mf.newLine();
         mf.write("<y>"+cy+"</y>");
         mf.newLine();
         mf.write("<w>"+zx+"</w>");
         mf.newLine();
         mf.write("<z>"+zy+"</z>");
         mf.newLine();
         mf.write(" </Coordinate>");
         mf.newLine();
         mf.write(" </xml>");
         mf.newLine();
         mf.write("<div id=\"map_content\"></div>");
         mf.newLine();
         mf.write(" </body>");
         mf.newLine();
        mf.write("</html>");
         mf.newLine();
        
        mf.close();
        
        
        Runtime r = Runtime.getRuntime();
        
        try{
            r.exec("cmd /c start index.html");
            
        }
        
        catch (IOException ex){
            ex.printStackTrace();
            
        }
    }
 
    catch (IOException ex){
             Logger.getLogger(map.class.getName()).log(Level.SEVERE, null, ex);
       
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(map.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new map().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton b1;
    private javax.swing.JRadioButton b2;
    private javax.swing.JRadioButton b3;
    private javax.swing.JButton bench;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton dam;
    private javax.swing.JButton dam1;
    private javax.swing.JButton explorer;
    private javax.swing.JButton firstproblem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField kfield;
    private javax.swing.JButton secondproblem;
    private javax.swing.JTextField vindex;
    private javax.swing.JTextField vindex1;
    // End of variables declaration//GEN-END:variables
}
